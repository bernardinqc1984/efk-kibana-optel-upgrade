apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-config
  namespace: observability
data:
  elasticsearch.yml: |
    cluster.name: "docker-cluster"
    network.host: 0.0.0.0
    discovery.type: single-node
    
    # Enable security
    xpack.security.enabled: true
    xpack.security.authc.anonymous.roles: monitoring_user
    xpack.security.transport.ssl.enabled: false
    xpack.security.http.ssl.enabled: false
    
    # Set initial passwords
    xpack.security.authc.realms.native.native1.order: 0
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-auth
  namespace: observability
type: Opaque
data:
  # Built-in user passwords (base64 encoded)
  elastic-password: ZWxhc3RpY19wYXNzd29yZA==  # elastic_password
  kibana-password: a2liYW5hX3Bhc3N3b3Jk      # kibana_password
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: observability
  labels:
    app: elasticsearch
spec:
  serviceName: elasticsearch
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      serviceAccountName: monitoring-sa
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.5.1
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        env:
        - name: discovery.type
          value: single-node
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx512m"
        - name: xpack.security.enabled
          value: "true"
        - name: xpack.security.transport.ssl.enabled
          value: "false"
        - name: xpack.security.http.ssl.enabled
          value: "false"
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-auth
              key: elastic-password
        - name: KIBANA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-auth
              key: kibana-password
        resources:
          limits:
            memory: 1Gi
            cpu: 500m
          requests:
            cpu: 200m
            memory: 512Mi
        volumeMounts:
        - name: config-volume
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
            httpHeaders:
            - name: Authorization
              value: Basic ZWxhc3RpYzplbGFzdGljX3Bhc3N3b3Jk
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
            httpHeaders:
            - name: Authorization
              value: Basic ZWxhc3RpYzplbGFzdGljX3Bhc3N3b3Jk
          initialDelaySeconds: 60
          periodSeconds: 20
      volumes:
      - name: config-volume
        configMap:
          name: elasticsearch-config
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
# ElasticSearch Service
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: observability
  labels:
    app: elasticsearch
spec:
  selector:
    app: elasticsearch
  ports:
  - port: 9200
    targetPort: 9200
    name: http
  - port: 9300
    targetPort: 9300
    name: transport
  type: ClusterIP
